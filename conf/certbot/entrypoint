#!/usr/bin/env bash
set -e

[ "${BUILD_ENV}" == "development" ] && exit 0
if ! [ -f /tmp/domains.txt ]; then
  echo "/tmp/domains.txt not found, exiting..."
  exit 0
fi
declare -a domains=($(cat /tmp/domains.txt))
readonly rsa_key_size=4096
readonly email="support@trivialsec.com"
# Set to 1 if you're testing your setup to avoid hitting request limits
[ -z "${CERTBOT_STAGING}" ] && CERTBOT_STAGING=1

cp /tmp/options-ssl-nginx.conf /etc/letsencrypt/options-ssl-nginx.conf
cp /tmp/ssl-dhparams.pem /etc/letsencrypt/ssl-dhparams.pem

for domain in "${domains[@]}"; do
  path="/etc/letsencrypt/live/${domain}"
  mkdir -p ${path}
  # Select appropriate email arg
  case "${email}" in
    "") email_arg="--register-unsafely-without-email" ;;
    *) email_arg="--email ${email}" ;;
  esac

  # Enable staging mode if needed
  [ ${CERTBOT_STAGING} == "0" ] || staging_arg="--staging"

  echo "Using rsa:${rsa_key_size}"
  certbot certonly --webroot -w /var/www/certbot \
      ${staging_arg} \
      ${email_arg} \
      -d ${domain} \
      --rsa-key-size ${rsa_key_size} \
      --agree-tos \
      --force-renewal \
      --non-interactive || cat /var/log/letsencrypt/letsencrypt.log

done

trap exit TERM
while :; do
  exec $@
  sleep 12h &
  wait $!
done
