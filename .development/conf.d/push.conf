server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    server_name             push.trivialsec;
    root                    /srv/app/;
    server_tokens           off;
    client_max_body_size    32M;
    underscores_in_headers  on;

    ssl_certificate /etc/nginx/certs/push.trivialsec/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/push.trivialsec/privkey.pem;
    include /etc/nginx/options-ssl-nginx.conf;
    ssl_dhparam /etc/nginx/ssl-dhparams.pem;

    location / {
        set $test  $request_method; 
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://app.trivialsec';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' 'https://app.trivialsec';
            add_header 'Access-Control-Allow-Credentials' 'true';
        }
        if ($request_uri = '/socket.io/') {
             set $test  "${test}OK"; 
        }
        if ($request_uri = '/heakthcheck') {
             set $test  "${test}OK"; 
        }
        if ($test != GETOK) { 
            return 404;
            break;
        } 
    }
    location /socket.io/ {
        proxy_cache             off;
        proxy_no_cache          1;
        proxy_cache_bypass      1;
        access_log              on;
        server_tokens           off;
        proxy_pass              http://push-service:5080/socket.io/;
        proxy_http_version      1.1;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection 'Upgrade';
        proxy_set_header        Host             $host;
        proxy_set_header        X-Real-IP        $remote_addr;
        proxy_set_header        X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto https;
        proxy_pass_header       device_id;
    }
}
