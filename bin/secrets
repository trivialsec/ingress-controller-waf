#!/usr/bin/env bash
set -e
GREEN='\033[0;32m'
RED='\033[0;31m'
ORANGE='\033[0;33m'
NC='\033[0m' # No Color

readonly default_env=Dev
readonly default_namespace=$(id -nu)-$(cat /etc/hostname)
if [ -f .env ]; then
    source .env
fi
APP_ENV=${APP_ENV:-${default_env}}
APP_NAME=${APP_NAME:-${default_namespace}}
read -p "What is your app name (set via APP_NAME)? [${APP_NAME}]: " app_name
read -p "What is your app env (set via APP_ENV)? [${APP_ENV}]: " app_env
namespace="/${app_env:-${APP_ENV}}/Deploy/${app_name:-${APP_NAME}}"

function prompt() {
    local param_name=$1
    local default_value=${2:-""}
    local type=${3:-SecureString}
    local user_value
    local current_value=$(aws ssm get-parameter --name "${namespace}/${param_name}" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
    echo -ne "${ORANGE}Current Value: ${current_value:-'not set'}${NC} "
    read -p "Set: ${param_name} [${default_value}]: " user_value
    user_value=${user_value:-${default_value}}
    [ -z "${user_value}" ] && ( echo "empty input, skipping.."; return; )
    aws ssm put-parameter \
        --name "${namespace}/${param_name}" \
        --type "${type}" \
        --value "${user_value}" \
        --overwrite
}

echo -e "${GREEN}Tip${NC}: https://www.projecthoneypot.org/httpbl_configure.php"
prompt "projecthoneypot_key" "${TF_VAR_projecthoneypot_key}"
